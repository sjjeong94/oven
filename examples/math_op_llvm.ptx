üîç Auto-detected GPU compute capability: sm_86
//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	cos
.extern .entry  (.param .b32 func_retval0) __nv_log2f
(
	.param .f32 __nv_log2f_param_0
)
;
.extern .entry  (.param .b32 func_retval0) __nv_logf
(
	.param .f32 __nv_logf_param_0
)
;
.extern .entry  (.param .b32 func_retval0) __nv_tanf
(
	.param .f32 __nv_tanf_param_0
)
;
.extern .entry  (.param .b32 func_retval0) __nv_sinf
(
	.param .f32 __nv_sinf_param_0
)
;
.extern .entry  (.param .b32 func_retval0) __nv_cosf
(
	.param .f32 __nv_cosf_param_0
)
;

.visible .entry cos(
	.param .u64 .ptr .align 1 cos_param_0,
	.param .u64 .ptr .align 1 cos_param_1
)
{
	.reg .b32 	%r<5>;
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<8>;

	ld.param.u64 	%rd1, [cos_param_0];
	ld.param.u64 	%rd2, [cos_param_1];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	mul.wide.s32 	%rd5, %r4, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	{ // callseq 0, 0
	.param .b32 param0;
	st.param.f32 	[param0], %f1;
	.param .b32 retval0;
	call.uni (retval0), 
	__nv_cosf, 
	(
	param0
	);
	ld.param.f32 	%f2, [retval0];
	} // callseq 0
	add.s64 	%rd7, %rd3, %rd5;
	st.global.f32 	[%rd7], %f2;
	ret;

}
	// .globl	sin
.visible .entry sin(
	.param .u64 .ptr .align 1 sin_param_0,
	.param .u64 .ptr .align 1 sin_param_1
)
{
	.reg .b32 	%r<5>;
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<8>;

	ld.param.u64 	%rd1, [sin_param_0];
	ld.param.u64 	%rd2, [sin_param_1];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	mul.wide.s32 	%rd5, %r4, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	{ // callseq 1, 0
	.param .b32 param0;
	st.param.f32 	[param0], %f1;
	.param .b32 retval0;
	call.uni (retval0), 
	__nv_sinf, 
	(
	param0
	);
	ld.param.f32 	%f2, [retval0];
	} // callseq 1
	add.s64 	%rd7, %rd3, %rd5;
	st.global.f32 	[%rd7], %f2;
	ret;

}
	// .globl	tan
.visible .entry tan(
	.param .u64 .ptr .align 1 tan_param_0,
	.param .u64 .ptr .align 1 tan_param_1
)
{
	.reg .b32 	%r<5>;
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<8>;

	ld.param.u64 	%rd1, [tan_param_0];
	ld.param.u64 	%rd2, [tan_param_1];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	mul.wide.s32 	%rd5, %r4, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	{ // callseq 2, 0
	.param .b32 param0;
	st.param.f32 	[param0], %f1;
	.param .b32 retval0;
	call.uni (retval0), 
	__nv_tanf, 
	(
	param0
	);
	ld.param.f32 	%f2, [retval0];
	} // callseq 2
	add.s64 	%rd7, %rd3, %rd5;
	st.global.f32 	[%rd7], %f2;
	ret;

}
	// .globl	log
.visible .entry log(
	.param .u64 .ptr .align 1 log_param_0,
	.param .u64 .ptr .align 1 log_param_1
)
{
	.reg .b32 	%r<5>;
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<8>;

	ld.param.u64 	%rd1, [log_param_0];
	ld.param.u64 	%rd2, [log_param_1];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	mul.wide.s32 	%rd5, %r4, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	{ // callseq 3, 0
	.param .b32 param0;
	st.param.f32 	[param0], %f1;
	.param .b32 retval0;
	call.uni (retval0), 
	__nv_logf, 
	(
	param0
	);
	ld.param.f32 	%f2, [retval0];
	} // callseq 3
	add.s64 	%rd7, %rd3, %rd5;
	st.global.f32 	[%rd7], %f2;
	ret;

}
	// .globl	log2
.visible .entry log2(
	.param .u64 .ptr .align 1 log2_param_0,
	.param .u64 .ptr .align 1 log2_param_1
)
{
	.reg .b32 	%r<5>;
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<8>;

	ld.param.u64 	%rd1, [log2_param_0];
	ld.param.u64 	%rd2, [log2_param_1];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	mul.wide.s32 	%rd5, %r4, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	{ // callseq 4, 0
	.param .b32 param0;
	st.param.f32 	[param0], %f1;
	.param .b32 retval0;
	call.uni (retval0), 
	__nv_log2f, 
	(
	param0
	);
	ld.param.f32 	%f2, [retval0];
	} // callseq 4
	add.s64 	%rd7, %rd3, %rd5;
	st.global.f32 	[%rd7], %f2;
	ret;

}

