//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	sigmoid

.visible .entry sigmoid(
	.param .u64 .ptr .align 1 sigmoid_param_0,
	.param .u64 .ptr .align 1 sigmoid_param_1
)
{
	.reg .b32 	%r<5>;
	.reg .f32 	%f<6>;
	.reg .b64 	%rd<8>;

	ld.param.u64 	%rd1, [sigmoid_param_0];
	ld.param.u64 	%rd2, [sigmoid_param_1];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	mul.wide.s32 	%rd5, %r4, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	mul.rn.f32 	%f2, %f1, 0fBFB8AA3B;
	ex2.approx.f32 	%f3, %f2;
	add.rn.f32 	%f4, %f3, 0f3F800000;
	rcp.rn.f32 	%f5, %f4;
	add.s64 	%rd7, %rd3, %rd5;
	st.global.f32 	[%rd7], %f5;
	ret;

}
	// .globl	exp
.visible .entry exp(
	.param .u64 .ptr .align 1 exp_param_0,
	.param .u64 .ptr .align 1 exp_param_1
)
{
	.reg .b32 	%r<5>;
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<8>;

	ld.param.u64 	%rd1, [exp_param_0];
	ld.param.u64 	%rd2, [exp_param_1];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	mul.wide.s32 	%rd5, %r4, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	mul.rn.f32 	%f2, %f1, 0f3FB8AA3B;
	ex2.approx.f32 	%f3, %f2;
	add.s64 	%rd7, %rd3, %rd5;
	st.global.f32 	[%rd7], %f3;
	ret;

}
	// .globl	sqrt
.visible .entry sqrt(
	.param .u64 .ptr .align 1 sqrt_param_0,
	.param .u64 .ptr .align 1 sqrt_param_1
)
{
	.reg .b32 	%r<5>;
	.reg .f32 	%f<3>;
	.reg .b64 	%rd<8>;

	ld.param.u64 	%rd1, [sqrt_param_0];
	ld.param.u64 	%rd2, [sqrt_param_1];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	mul.wide.s32 	%rd5, %r4, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	sqrt.rn.f32 	%f2, %f1;
	add.s64 	%rd7, %rd3, %rd5;
	st.global.f32 	[%rd7], %f2;
	ret;

}
	// .globl	abs
.visible .entry abs(
	.param .u64 .ptr .align 1 abs_param_0,
	.param .u64 .ptr .align 1 abs_param_1
)
{
	.reg .b32 	%r<5>;
	.reg .f32 	%f<3>;
	.reg .b64 	%rd<8>;

	ld.param.u64 	%rd1, [abs_param_0];
	ld.param.u64 	%rd2, [abs_param_1];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	mul.wide.s32 	%rd5, %r4, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	abs.f32 	%f2, %f1;
	add.s64 	%rd7, %rd3, %rd5;
	st.global.f32 	[%rd7], %f2;
	ret;

}
	// .globl	ceil
.visible .entry ceil(
	.param .u64 .ptr .align 1 ceil_param_0,
	.param .u64 .ptr .align 1 ceil_param_1
)
{
	.reg .b32 	%r<5>;
	.reg .f32 	%f<3>;
	.reg .b64 	%rd<8>;

	ld.param.u64 	%rd1, [ceil_param_0];
	ld.param.u64 	%rd2, [ceil_param_1];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	mul.wide.s32 	%rd5, %r4, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	cvt.rpi.f32.f32 	%f2, %f1;
	add.s64 	%rd7, %rd3, %rd5;
	st.global.f32 	[%rd7], %f2;
	ret;

}
	// .globl	floor
.visible .entry floor(
	.param .u64 .ptr .align 1 floor_param_0,
	.param .u64 .ptr .align 1 floor_param_1
)
{
	.reg .b32 	%r<5>;
	.reg .f32 	%f<3>;
	.reg .b64 	%rd<8>;

	ld.param.u64 	%rd1, [floor_param_0];
	ld.param.u64 	%rd2, [floor_param_1];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	mul.wide.s32 	%rd5, %r4, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	cvt.rmi.f32.f32 	%f2, %f1;
	add.s64 	%rd7, %rd3, %rd5;
	st.global.f32 	[%rd7], %f2;
	ret;

}
	// .globl	rsqrt
.visible .entry rsqrt(
	.param .u64 .ptr .align 1 rsqrt_param_0,
	.param .u64 .ptr .align 1 rsqrt_param_1
)
{
	.reg .b32 	%r<5>;
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<8>;

	ld.param.u64 	%rd1, [rsqrt_param_0];
	ld.param.u64 	%rd2, [rsqrt_param_1];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	mul.wide.s32 	%rd5, %r4, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	sqrt.rn.f32 	%f2, %f1;
	rcp.rn.f32 	%f3, %f2;
	add.s64 	%rd7, %rd3, %rd5;
	st.global.f32 	[%rd7], %f3;
	ret;

}
